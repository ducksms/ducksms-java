/*
 * Ducksms
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ducksms.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ducksms.client.api;

import com.ducksms.client.ApiException;
import com.ducksms.client.model.CreatedSender;
import com.ducksms.client.model.DeletedSender;
import com.ducksms.client.model.ErrorException;
import com.ducksms.client.model.ErrorInvalidRequest;
import com.ducksms.client.model.ErrorNotFound;
import com.ducksms.client.model.ErrorUnauthenticated;
import com.ducksms.client.model.ErrorValidation;
import com.ducksms.client.model.GetSender;
import com.ducksms.client.model.ListSender;
import com.ducksms.client.model.Sender;
import com.ducksms.client.model.UpdatedSender;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SenderIdApi
 */
@Ignore
public class SenderIdApiTest {

    private final SenderIdApi api = new SenderIdApi();

    
    /**
     * Create a Sender ID
     *
     * Create a new sender id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSenderTest() throws ApiException {
        Sender sender = null;
        CreatedSender response = api.createSender(sender);

        // TODO: test validations
    }
    
    /**
     * Delete a Sender ID
     *
     * Delete an existing sender id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSenderTest() throws ApiException {
        String id = null;
        DeletedSender response = api.deleteSender(id);

        // TODO: test validations
    }
    
    /**
     * Get a single Sender ID
     *
     * Get details on a single sender id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSenderTest() throws ApiException {
        String id = null;
        GetSender response = api.getSender(id);

        // TODO: test validations
    }
    
    /**
     * List Sender ID
     *
     * List all the senders
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSenderTest() throws ApiException {
        Integer page = null;
        String filterName = null;
        String filterStatus = null;
        ListSender response = api.listSender(page, filterName, filterStatus);

        // TODO: test validations
    }
    
    /**
     * Update a Sender ID
     *
     * Update an existing sender id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSenderTest() throws ApiException {
        String id = null;
        Sender sender = null;
        UpdatedSender response = api.updateSender(id, sender);

        // TODO: test validations
    }
    
}
